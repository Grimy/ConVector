
public class extends WriterGraphics2D;

private static final String[] format = {"M %,%", "L %,%", "Q %,% %,%", "C %,% %,% %,%", "Z"};

@Override
protected void output(AffineTransform transform, PrintStream out) {
	out.println("<?xml version='1.0' encoding='UTF-8' standalone='no'?>");
	out.println("<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN' "
			+ "'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>");
	out.println("<svg xmlns='http://www.w3.org/2000/svg' transform='scale(1 -1) translate(0 65535)"
			+ "width='1024' height='1024' viewBox='0 0 65535 65535'>");

	colorMap.forEach((color, area) -> {
		out.format("<path style='fill:#%06x;stroke:none' d='",
				color.getRGB() & 0xFFFFFF);
		PathIterator itr = flatness < 0 ? area.getPathIterator(transform)
		                                : area.getPathIterator(transform, flatness);

		for (; !itr.isDone(); itr.next()) {
			int type = itr.currentSegment(coords);
			WriterGraphics2D.format(out, format[type], coords);
		}

		out.print("'/>");
	});

	out.println("</svg>");
}
